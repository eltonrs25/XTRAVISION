/*
 * This class handles all panels related to returning and their events handling.
 */
package xtra.vision;

import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author ha349
 */
public class ReturnGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    public ReturnGUI() {   
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XTRA-VISION");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        returnview = new ReturnView();
        returnview.addReturnButtListener( new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(!returnview.getMovieName().equals("")){
                    processReturn(returnview.getMovieName());
                }else{
                    JOptionPane.showMessageDialog(new JFrame(), "Please Enter a valid six digit Number","Invalid Input",
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        jPanel3.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(returnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 800, 540));

        jPanel1.setBackground(new java.awt.Color(255, 0, 51));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("RETURN YOUR MOVIES");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 60));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents
  /*
 * This function processes the return transaction and controls flow of interfaces.
 */      
    public void processReturn(String name){
        try {
            TransactionDAO db = new TransactionDAO();
            int tag = Integer.parseInt(name);
            RentTransaction rentTrans = db.getTransactionsByTag(tag);
            Date today = new Date(); 
            if(rentTrans!=null){
                MoviesDAO movieDAO = new MoviesDAO();     
                boolean isAvail = movieDAO.checkAvailabilityStatus(tag);
                movieDAO.releaseResources();
                if(isAvail){
                    JOptionPane.showMessageDialog(new JFrame(), "Please Enter a valid six digit Number","Invalid Input",
                        JOptionPane.ERROR_MESSAGE);
                }else{
                long diff =  today.getTime() - rentTrans.getTransDate().getTime();
                ReturnTransaction returnTrans = new ReturnTransaction(rentTrans.getEmailID(),today);
                returnTrans.setFine(findAdditionalCharges((int) TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS)));
                returnTrans.setNoOfDays((int) TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS));
                returnTrans.setTagNo(tag);
                if(db.saveReturnTransaction(returnTrans)){
                    sendEmailToUser(returnTrans);
                    MoviesDAO DAO = new MoviesDAO();                
                    DAO.changeMovieAvailabilityStatus(tag, true);                                        
                    DAO.releaseResources();
                String pattern = "MM/dd/yyyy";
                DateFormat df = new SimpleDateFormat(pattern);
                String dateAsString = df.format(rentTrans.getTransDate().getTime());
                    returnFinalview = new ReturnFinalView(returnTrans,dateAsString);
                    returnFinalview.addExitButtListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    new MainView().setVisible(true);
                     dispose();
                }
                });
                    jPanel3.remove(returnview);
                    jPanel3.add(returnFinalview, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 800, 540));
                    revalidate();
                }
            }
            }
            else{
                    JOptionPane.showMessageDialog(new JFrame(), "Please Enter a valid six digit Number","Invalid Input",
                        JOptionPane.ERROR_MESSAGE);
                }
            db.releaseResources();
        } catch (SQLException ex) {
            Logger.getLogger(ReturnGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
  /*
 * This function calculates the additional charges.
 */       
    public double findAdditionalCharges(int extraDays){
        
        double fine = 0.0;
        if(extraDays > 0 && extraDays < 10){
            fine = extraDays * 1.50;
        }else if(extraDays >= 10){
            fine = 15;
        }
        return fine;
    }
      /*
 * This function sends email to user
 */   
    public void sendEmailToUser(ReturnTransaction t){
        String message ="<html>Return Transaction<br /><br />Transaction Date = </html>" + t.getTransDate() + "<html><br /><br />Movie Returned = </html>" + t.getTagNo() +
        "<html><br /><br />No Of Days rented = </html>" + t.getNoOfDays()+"<html><br /><br />Total additional charges = </html>" + t.getFine();
                  
                          try {           
			Properties defaultProps = new Properties();
		defaultProps.setProperty("mail.smtp.host", "smtp.gmail.com");
		defaultProps.setProperty("mail.smtp.port", "587");
		defaultProps.setProperty("mail.user", "your email");
		defaultProps.setProperty("mail.password", "password");
		defaultProps.setProperty("mail.smtp.starttls.enable", "true");
		defaultProps.setProperty("mail.smtp.auth", "true");
			EmailUtility.sendEmail(defaultProps, t.getEmailID(), "Report",message , null);
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
		}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    private ReturnView returnview;
    private ReturnFinalView returnFinalview;
}
